"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_test_renderer_1 = __importDefault(require("react-test-renderer"));
const index_1 = __importStar(require("../index"));
describe('Aspect Ratio', () => {
    describe('React < 15.6', () => {
        it('should render wrapper for children', () => {
            const innerImage = (0, jsx_runtime_1.jsx)("img", { src: "https://foo.bar", alt: "demo" });
            const node = react_test_renderer_1.default
                .create((0, jsx_runtime_1.jsx)(index_1.default, { ratio: "4/3", children: innerImage }))
                .toJSON();
            expect(node).toMatchSnapshot();
        });
        it('should support number as props', () => {
            const innerImage = (0, jsx_runtime_1.jsx)("img", { src: "https://foo.bar", alt: "demo" });
            const node = react_test_renderer_1.default
                .create((0, jsx_runtime_1.jsx)(index_1.default, { ratio: 0.75, children: innerImage }))
                .toJSON();
            expect(node).toMatchSnapshot();
        });
        it('custom style will be adopted', () => {
            const innerImage = (0, jsx_runtime_1.jsx)("img", { src: "https://foo.bar", alt: "demo" });
            const node = react_test_renderer_1.default
                .create((0, jsx_runtime_1.jsx)(index_1.default, { ratio: "4/3", style: { color: '#fff' }, children: innerImage }))
                .toJSON();
            expect(node).toMatchSnapshot();
        });
    });
    describe('React > 15.6', () => {
        it('should render wrapper for children', () => {
            const innerImage = (0, jsx_runtime_1.jsx)("img", { src: "https://foo.bar", alt: "demo" });
            const node = react_test_renderer_1.default
                .create((0, jsx_runtime_1.jsx)(index_1.AspectRatio, { ratio: "4/3", children: innerImage }))
                .toJSON();
            expect(node).toMatchSnapshot();
        });
        it('should support number as props', () => {
            const innerImage = (0, jsx_runtime_1.jsx)("img", { src: "https://foo.bar", alt: "demo" });
            const node = react_test_renderer_1.default
                .create((0, jsx_runtime_1.jsx)(index_1.AspectRatio, { ratio: 0.75, children: innerImage }))
                .toJSON();
            expect(node).toMatchSnapshot();
        });
        it('custom style will be adopted', () => {
            const innerImage = (0, jsx_runtime_1.jsx)("img", { src: "https://foo.bar", alt: "demo" });
            const node = react_test_renderer_1.default
                .create((0, jsx_runtime_1.jsx)(index_1.AspectRatio, { ratio: "4/3", style: { color: '#fff' }, children: innerImage }))
                .toJSON();
            expect(node).toMatchSnapshot();
        });
    });
});
